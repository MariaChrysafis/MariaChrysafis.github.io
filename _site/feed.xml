<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-11-03T18:49:59-07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Puzzles</title><subtitle>Puzzles of all sorts...related to math, computer science, and other musings!
</subtitle><author><name>Maria Chrysafis</name><email>maria.chrysafis.junior@gmail.com</email></author><entry><title type="html">Binary Search Trees, Binary Heaps, and Treaps</title><link href="http://localhost:4000/2022/11/03/treaps.html" rel="alternate" type="text/html" title="Binary Search Trees, Binary Heaps, and Treaps" /><published>2022-11-03T00:00:00-07:00</published><updated>2022-11-03T00:00:00-07:00</updated><id>http://localhost:4000/2022/11/03/treaps</id><content type="html" xml:base="http://localhost:4000/2022/11/03/treaps.html"><![CDATA[<h1 id="binary-heaps">Binary Heaps</h1>
<h2 id="definitions">Definitions</h2>
<p>There are two types of binary heaps: min-heaps and max-heaps.</p>

<p>We say that a binary tree satisfies the <strong>min-heap property</strong> if</p>

<ul>
  <li>It is a complete binary tree.</li>
  <li>The value of a given node is smaller than the value of any other node in its subtree.</li>
</ul>

<center>
<div class="mermaid">
graph TD;
    A((1))--&gt;B((2))
    A--&gt;C((4))
    B--&gt;D((5))
    B--&gt;E((3))
    C--&gt;F((8))
    C--&gt;G((6))
    D--&gt;H((7))
</div>
<font size="-2">
<caption>
An example of a min-heap.
</caption>
</font>
</center>

<p>We say that a binary tree satisfies the <strong>max-heap property</strong> if</p>

<ul>
  <li>It is a complete binary tree.</li>
  <li>The value of a given node is larger than the value of any other node in its subtree.</li>
</ul>

<center>
<div class="mermaid">
graph TD;
    A((8))--&gt;B((4))
    A--&gt;C((7))
    B--&gt;D((2))
    B--&gt;E((3))
    C--&gt;F((6))
    C--&gt;G((5))
    D--&gt;H((1))
</div>
<font size="-2">
<caption>
An example of a max-heap.
</caption>
</font>
</center>

<h2 id="inserting-elements-into-binary-heaps">Inserting Elements into Binary Heaps</h2>
<center>
<div class="mermaid" style="display:inline">
graph TD;
    A((1))--&gt;B((3))
    A--&gt;C((6))
    B--&gt;D((4))
    B--&gt;E((8))
    C--&gt;F((7))
    C--&gt;G((9))
    D--&gt;H((5))
</div>
<div class="mermaid" style="display:inline">
graph TD
    A((1))--&gt;B((3));
    A--&gt;C((6));
    B--&gt;D((4));
    B--&gt;E((8));
    C--&gt;F((7));
    C--&gt;G((9));
    D--&gt;H((5));
    D--&gt;I((2));
</div>
<div class="mermaid" style="display:inline">
graph TD;
    A1((1))--&gt;B1((3))
    A1--&gt;C1((6))
    B1--&gt;D1((2))
    B1--&gt;E1((8))
    C1--&gt;F1((7))
    C1--&gt;G1((9))
    D1--&gt;H1((5))
    D1--&gt;I1((4))
</div>
<div class="mermaid" style="display:inline">
graph TD;
    A((1))--&gt;B((2))
    A--&gt;C((6))
    B--&gt;D((3))
    B--&gt;E((8))
    C--&gt;F((7))
    C--&gt;G((9))
    D--&gt;H((5))
    D--&gt;I((4))
</div>
</center>

<h2 id="deleting-root-element-from-binary-heaps">Deleting Root Element from Binary Heaps</h2>

<h1 id="binary-search-trees">Binary Search Trees</h1>

<h2 id="definitions-1">Definitions</h2>

<h2 id="searching">Searching</h2>

<h2 id="insertion">Insertion</h2>

<h2 id="deletion">Deletion</h2>

<h2 id="average-height">Average Height</h2>

<h1 id="treaps">Treaps</h1>

<h2 id="insertion-1">Insertion</h2>

<h2 id="searching-1">Searching</h2>

<h2 id="deletion-1">Deletion</h2>

<h2 id="building">Building</h2>

<h2 id="union">Union</h2>

<h2 id="intersection">Intersection</h2>

<h2 id="case-study-segment-tree">Case Study: Segment Tree</h2>]]></content><author><name>Maria Chrysafis</name><email>maria.chrysafis.junior@gmail.com</email></author><summary type="html"><![CDATA[Binary Heaps Definitions There are two types of binary heaps: min-heaps and max-heaps.]]></summary></entry></feed>